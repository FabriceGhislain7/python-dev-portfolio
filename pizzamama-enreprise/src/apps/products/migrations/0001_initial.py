# Generated by Django 5.0.1 on 2025-07-22 00:47

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Allergen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('symbol', models.CharField(help_text='Simbolo standard (es. G per glutine)', max_length=10)),
                ('description', models.TextField(help_text='Descrizione dettagliata allergene')),
                ('color_code', models.CharField(default='#FF0000', help_text='Codice colore hex per UI', max_length=7)),
            ],
            options={
                'verbose_name': 'Allergene',
                'verbose_name_plural': 'Allergeni',
                'db_table': 'products_allergen',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PizzaSize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('diameter_cm', models.PositiveIntegerField(help_text='Diametro in centimetri')),
                ('price_multiplier', models.DecimalField(decimal_places=2, default=1.0, help_text='Moltiplicatore prezzo base (1.0 = prezzo base)', max_digits=3)),
                ('is_active', models.BooleanField(default=True)),
                ('sort_order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Taglia Pizza',
                'verbose_name_plural': 'Taglie Pizza',
                'db_table': 'products_pizza_size',
                'ordering': ['sort_order', 'diameter_cm'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, upload_to='categories/')),
                ('is_active', models.BooleanField(default=True)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='products.category')),
            ],
            options={
                'verbose_name': 'Categoria',
                'verbose_name_plural': 'Categorie',
                'db_table': 'products_category',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('cost_per_unit', models.DecimalField(decimal_places=2, help_text='Costo per unità (€)', max_digits=6)),
                ('price_per_extra', models.DecimalField(decimal_places=2, default=0.0, help_text='Prezzo extra per cliente (€)', max_digits=6)),
                ('stock_quantity', models.PositiveIntegerField(default=0)),
                ('minimum_stock', models.PositiveIntegerField(default=10)),
                ('unit_of_measure', models.CharField(choices=[('g', 'Grammi'), ('ml', 'Millilitri'), ('piece', 'Pezzo'), ('slice', 'Fetta')], default='g', max_length=20)),
                ('is_vegetarian', models.BooleanField(default=True)),
                ('is_vegan', models.BooleanField(default=False)),
                ('is_extra', models.BooleanField(default=False, help_text='Disponibile come extra a pagamento')),
                ('is_active', models.BooleanField(default=True)),
                ('image', models.ImageField(blank=True, upload_to='ingredients/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('allergens', models.ManyToManyField(blank=True, to='products.allergen')),
            ],
            options={
                'verbose_name': 'Ingrediente',
                'verbose_name_plural': 'Ingredienti',
                'db_table': 'products_ingredient',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Pizza',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('description', models.TextField()),
                ('short_description', models.CharField(blank=True, max_length=200)),
                ('base_price', models.DecimalField(decimal_places=2, help_text='Prezzo base per taglia media', max_digits=8)),
                ('calories_per_100g', models.PositiveIntegerField(blank=True, null=True)),
                ('preparation_time_minutes', models.PositiveIntegerField(default=15)),
                ('image', models.ImageField(upload_to='pizzas/')),
                ('gallery_images', models.JSONField(blank=True, default=list, help_text='Array di URL immagini aggiuntive')),
                ('meta_title', models.CharField(blank=True, max_length=60)),
                ('meta_description', models.CharField(blank=True, max_length=160)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_spicy', models.BooleanField(default=False)),
                ('is_vegetarian', models.BooleanField(default=False)),
                ('is_vegan', models.BooleanField(default=False)),
                ('popularity_score', models.FloatField(default=0.0)),
                ('avg_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('total_reviews', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pizzas', to='products.category')),
            ],
            options={
                'verbose_name': 'Pizza',
                'verbose_name_plural': 'Pizze',
                'db_table': 'products_pizza',
                'ordering': ['-is_featured', '-popularity_score', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PizzaIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, help_text='Quantità ingrediente per pizza media', max_digits=6)),
                ('is_removable', models.BooleanField(default=True, help_text='Cliente può rimuovere questo ingrediente')),
                ('is_extra_charge', models.BooleanField(default=False, help_text='Ingrediente premium con costo extra')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.ingredient')),
                ('pizza', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.pizza')),
            ],
            options={
                'verbose_name': 'Ingrediente Pizza',
                'verbose_name_plural': 'Ingredienti Pizza',
                'db_table': 'products_pizza_ingredient',
                'unique_together': {('pizza', 'ingredient')},
            },
        ),
        migrations.AddField(
            model_name='pizza',
            name='ingredients',
            field=models.ManyToManyField(related_name='pizzas', through='products.PizzaIngredient', to='products.ingredient'),
        ),
        migrations.AddIndex(
            model_name='pizza',
            index=models.Index(fields=['is_active', 'is_featured'], name='products_pi_is_acti_52bfd1_idx'),
        ),
        migrations.AddIndex(
            model_name='pizza',
            index=models.Index(fields=['category', 'is_active'], name='products_pi_categor_28250a_idx'),
        ),
        migrations.AddIndex(
            model_name='pizza',
            index=models.Index(fields=['avg_rating'], name='products_pi_avg_rat_5d70f6_idx'),
        ),
    ]
